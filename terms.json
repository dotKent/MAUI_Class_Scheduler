//Introduction
//As a competent mobile application developer, your understanding of mobile application structure and design will help you to develop applications to meet customer requirements.



//For this task, you will develop a multiple-screen mobile application for WGU students to track their academic terms, courses associated with each term, and assessments associated with each course. The application will allow students to enter, edit, and delete term, course, and assessment data. It should provide summary and detailed views of courses for each term, provide notifications for upcoming performance and objective assessments, and notify students of deadlines and tracking milestones even after the application is closed. You will create a wireframe as a visual guide, representing the skeletal framework of the application. Your application will use an SQLite database using the SQLIte ORM located at SQLite-net.



//You will share this project to your GitLab repository and backup regularly. Use the GitLab link in the web links section to create your Gitlab project in the WGU GitLab space, and prior to starting your work, reference the “GitLab How-To” web link to set up your project.



//This task will allow you to demonstrate your ability to apply the skills learned in the course and help you to apply these skills in a familiar, real-world scenario.



//The assessment must be submitted using the NET Multi-platform App UI (MAUI) framework. For this assessment, you are welcome to use these plugins or plugins referenced at these sites:



//.NET Multi-platform App UI (.NET MAUI) Community Toolkit Documentation

//DatePicker

//.NET MAUI Local Databases

//Picker

//Plugin.LocalNotification

//Share

//SQL tite-net



//Any controls specified as part of the Microsoft .NET MAUI Toolkit are allowed in the project. All other external plugins and libraries are not allowed.C.  Create, within the .NET Multi-platform App UI (MAUI) framework, a mobile application aligned to the wireframe drawn in part A. Include all of the following features:

//1.  Provide an interface for all the following information for as many academic terms as needed:

// •   academic term title (e.g., Term 1, Term 2, Spring term)

// •   start and end dates (using a date picker)


//Note: You are welcome to use the following plugin for this step: DatePicker


//2.  Provide an interface that allows the user to access all the following features for each academic term:

// •   add and display a list of six courses for each term

// •   display a detailed view of each term, including all the information from part C1

//3.  Provide an interface that allows the user to access and edit all the following details for each course:

// •   course title

// •   start and anticipated end dates (using a date picker)


//Note: You are welcome to use the following plugin for this step: DatePicker


// •   course status (e.g., in progress, completed, dropped, plan to take) (using a picker)


//Note: You are welcome to use the following plugin for this step: Picker


// •   the course instructor’s name, phone number, and email address; include validation to prevent the user from saving a null value (e.g., an invalid email address


//4.  Create features that allow the user to do all of the following for each course:

// •   enter two assessments: one performance assessment and one objective assessment

// •   add and display optional notes

// •   enter, edit, and delete course information

// •   display an editable detailed view of the course, including the due date

// •   set alerts (e.g., notifications) for the start and end date of the course


//Note: You are welcome to use the following plugin for this step: Plugin.LocalNotification


// •   share notes via a sharing feature (e.g., email, SMS)


//Note: You are welcome to use the following plugins for this step: Share


//5.  Provide an interface for the user to do all of the following for each assessment:

// •   include the names and due dates

// •   enter, edit, and delete assessment information

// •   set notifications for anticipated start and end dates of each assessment


//Note: You are welcome to use the following plugin for this step: Plugin.LocalNotification


//6.  Write code to create a set of data for evaluation purposes, including the following details:

// •   one term and one course from part C3

// •   the two assessments from part C4 for that course

// •   the following name, phone number, and email address as the course instructor contact information:

// •   Anika Patel

// •   555-123-4567

// •   anika.patel@strimeuniversity.edu


//D.  Examine the wireframe from part B to determine any changes that you made during the development of the mobile application.

//1.  Explain the reasons for any changes made during the development of the mobile application by adding comments within the wireframe. If no changes were made, include that comment.

//2.  Confirm that the wireframe aligns with the completed mobile application from part C after the inclusion of the comments from part D1.


//E.  Provide a complete and operational source file for your mobile application.
//i also have started Xaml and Xaml.cs files  And the attached wireframe and 
